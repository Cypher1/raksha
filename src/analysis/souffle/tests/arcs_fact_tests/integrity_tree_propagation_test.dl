//-----------------------------------------------------------------------------
// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//-----------------------------------------------------------------------------
#include "src/analysis/souffle/taint.dl"
#include "src/analysis/souffle/fact_test_helper.dl"
#include "src/analysis/souffle/tests/arcs_fact_tests/integrity_tag_prop_helper.dl"

isAccessPath("a").
isAccessPath("b").
isAccessPath("c").
isAccessPath("d").
isAccessPath("e").

// Make "c" the target of edges from "a" and "b".
edge("a", "c").
edge("b", "c").

// Make "e" the target of edges from "c" and "d".
edge("c", "e").
edge("d", "e").

// If we apply "integ1" and "integ2" to "a" and "b", they should also appear on
// "c".
hasAppliedIntegrityTag("a", "defaultOwner", "integ1").
hasAppliedIntegrityTag("b", "defaultOwner", "integ1").

hasAppliedIntegrityTag("a", "defaultOwner", "integ2").
hasAppliedIntegrityTag("b", "defaultOwner", "integ2").

expectHasIntegrityTag("a", "defaultOwner", "integ1").
expectHasIntegrityTag("b", "defaultOwner", "integ1").
expectHasIntegrityTag("c", "defaultOwner", "integ1").

expectHasIntegrityTag("a", "defaultOwner", "integ2").
expectHasIntegrityTag("b", "defaultOwner", "integ2").
expectHasIntegrityTag("c", "defaultOwner", "integ2").

// If we apply "integ1" to d, it should also appear on e.
hasAppliedIntegrityTag("d", "defaultOwner", "integ1").

expectHasIntegrityTag("d", "defaultOwner", "integ1").
expectHasIntegrityTag("e", "defaultOwner", "integ1").

// If we apply "integ3" to "a" and not "b", however, it should not appear on
// "c".
hasAppliedIntegrityTag("a", "defaultOwner", "integ3").
expectHasIntegrityTag("a", "defaultOwner", "integ3").

// Similarly if we apply "integ4" only to "b".
hasAppliedIntegrityTag("b", "defaultOwner", "integ4").
expectHasIntegrityTag("b", "defaultOwner", "integ4").

// If we apply "integ5" to "c" and "d" directly, it should appear on "e".
hasAppliedIntegrityTag("c", "defaultOwner", "integ5").
hasAppliedIntegrityTag("d", "defaultOwner", "integ5").

expectHasIntegrityTag("c", "defaultOwner", "integ5").
expectHasIntegrityTag("d", "defaultOwner", "integ5").
expectHasIntegrityTag("e", "defaultOwner", "integ5").
